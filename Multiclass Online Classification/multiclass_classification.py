# -*- coding: utf-8 -*-
"""multiclass_classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PQTEpkKVnJrLDiQcd3PU7Ez9mPS4CpJ4
"""

from river import datasets
from river import tree
from river import metrics
from river import evaluate
from pprint import pprint

dataset = datasets.ImageSegments()
dataset

# Look at the first sample
for x, y in dataset:
    pass

x, y = next(iter(dataset))
pprint(x)
pprint(y)

# Define the model
model = tree.HoeffdingTreeClassifier()
metric = metrics.ClassificationReport()

for x,y in dataset:
    y_pred = model.predict_one(x)
    model.learn_one(x,y)
    if y_pred is not None:
        metric.update(y, y_pred)
metric

# Evaluate the model
evaluate.progressive_val_score(dataset, model, metric)